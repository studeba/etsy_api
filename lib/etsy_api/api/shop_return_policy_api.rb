=begin
#Etsy Open API v3

#<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

The version of the OpenAPI document: 3.0.0
Contact: developers@etsy.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module EtsyApi
  class ShopReturnPolicyApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\">Beta</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.</p></div>  Consolidates Return Policies by moving all listings from a source return policy to a destination return policy, and deleting the source return policy. This is commonly used in the event that a user attempts to update a Return Policy such that its data is a duplicate of some other Return Policy, which is prevented.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param source_return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param destination_return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param [Hash] opts the optional parameters
    # @return [ShopReturnPolicy]
    def consolidate_shop_return_policies(shop_id, source_return_policy_id, destination_return_policy_id, opts = {})
      data, _status_code, _headers = consolidate_shop_return_policies_with_http_info(shop_id, source_return_policy_id, destination_return_policy_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\&quot;&gt;Beta&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Give feedback&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.&lt;/p&gt;&lt;/div&gt;  Consolidates Return Policies by moving all listings from a source return policy to a destination return policy, and deleting the source return policy. This is commonly used in the event that a user attempts to update a Return Policy such that its data is a duplicate of some other Return Policy, which is prevented.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param source_return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param destination_return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShopReturnPolicy, Integer, Hash)>] ShopReturnPolicy data, response status code and response headers
    def consolidate_shop_return_policies_with_http_info(shop_id, source_return_policy_id, destination_return_policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReturnPolicyApi.consolidate_shop_return_policies ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReturnPolicyApi.consolidate_shop_return_policies"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReturnPolicyApi.consolidate_shop_return_policies, must be greater than or equal to 1.'
      end

      # verify the required parameter 'source_return_policy_id' is set
      if @api_client.config.client_side_validation && source_return_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'source_return_policy_id' when calling ShopReturnPolicyApi.consolidate_shop_return_policies"
      end
      if @api_client.config.client_side_validation && source_return_policy_id < 1
        fail ArgumentError, 'invalid value for "source_return_policy_id" when calling ShopReturnPolicyApi.consolidate_shop_return_policies, must be greater than or equal to 1.'
      end

      # verify the required parameter 'destination_return_policy_id' is set
      if @api_client.config.client_side_validation && destination_return_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'destination_return_policy_id' when calling ShopReturnPolicyApi.consolidate_shop_return_policies"
      end
      if @api_client.config.client_side_validation && destination_return_policy_id < 1
        fail ArgumentError, 'invalid value for "destination_return_policy_id" when calling ShopReturnPolicyApi.consolidate_shop_return_policies, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/policies/return/consolidate'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['source_return_policy_id'] = source_return_policy_id
      form_params['destination_return_policy_id'] = destination_return_policy_id

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReturnPolicy'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReturnPolicyApi.consolidate_shop_return_policies",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReturnPolicyApi#consolidate_shop_return_policies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\">Beta</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.</p></div>  Creates a new Return Policy. Note: if either accepts_returns or accepts_exchanges is true, then a return_deadline is required.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param accepts_returns [Boolean] 
    # @param accepts_exchanges [Boolean] 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :return_deadline The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90].
    # @return [ShopReturnPolicy]
    def create_shop_return_policy(shop_id, accepts_returns, accepts_exchanges, opts = {})
      data, _status_code, _headers = create_shop_return_policy_with_http_info(shop_id, accepts_returns, accepts_exchanges, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\&quot;&gt;Beta&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Give feedback&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.&lt;/p&gt;&lt;/div&gt;  Creates a new Return Policy. Note: if either accepts_returns or accepts_exchanges is true, then a return_deadline is required.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param accepts_returns [Boolean] 
    # @param accepts_exchanges [Boolean] 
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :return_deadline The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90].
    # @return [Array<(ShopReturnPolicy, Integer, Hash)>] ShopReturnPolicy data, response status code and response headers
    def create_shop_return_policy_with_http_info(shop_id, accepts_returns, accepts_exchanges, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReturnPolicyApi.create_shop_return_policy ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReturnPolicyApi.create_shop_return_policy"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReturnPolicyApi.create_shop_return_policy, must be greater than or equal to 1.'
      end

      # verify the required parameter 'accepts_returns' is set
      if @api_client.config.client_side_validation && accepts_returns.nil?
        fail ArgumentError, "Missing the required parameter 'accepts_returns' when calling ShopReturnPolicyApi.create_shop_return_policy"
      end
      # verify the required parameter 'accepts_exchanges' is set
      if @api_client.config.client_side_validation && accepts_exchanges.nil?
        fail ArgumentError, "Missing the required parameter 'accepts_exchanges' when calling ShopReturnPolicyApi.create_shop_return_policy"
      end
      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/policies/return'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['accepts_returns'] = accepts_returns
      form_params['accepts_exchanges'] = accepts_exchanges
      form_params['return_deadline'] = opts[:'return_deadline'] if !opts[:'return_deadline'].nil?

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReturnPolicy'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReturnPolicyApi.create_shop_return_policy",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReturnPolicyApi#create_shop_return_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\">Beta</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.</p></div>  Deletes an existing Return Policy. Deletion is only allowed for policies which have no associated listings – move them to another policy before attempting deletion.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_shop_return_policy(shop_id, return_policy_id, opts = {})
      delete_shop_return_policy_with_http_info(shop_id, return_policy_id, opts)
      nil
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\&quot;&gt;Beta&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Give feedback&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.&lt;/p&gt;&lt;/div&gt;  Deletes an existing Return Policy. Deletion is only allowed for policies which have no associated listings – move them to another policy before attempting deletion.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_shop_return_policy_with_http_info(shop_id, return_policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReturnPolicyApi.delete_shop_return_policy ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReturnPolicyApi.delete_shop_return_policy"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReturnPolicyApi.delete_shop_return_policy, must be greater than or equal to 1.'
      end

      # verify the required parameter 'return_policy_id' is set
      if @api_client.config.client_side_validation && return_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'return_policy_id' when calling ShopReturnPolicyApi.delete_shop_return_policy"
      end
      if @api_client.config.client_side_validation && return_policy_id < 1
        fail ArgumentError, 'invalid value for "return_policy_id" when calling ShopReturnPolicyApi.delete_shop_return_policy, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/policies/return/{return_policy_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'return_policy_id' + '}', CGI.escape(return_policy_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReturnPolicyApi.delete_shop_return_policy",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReturnPolicyApi#delete_shop_return_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\">Beta</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.</p></div>  Returns a shop's list of existing Return Policies
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param [Hash] opts the optional parameters
    # @return [ShopReturnPolicies]
    def get_shop_return_policies(shop_id, opts = {})
      data, _status_code, _headers = get_shop_return_policies_with_http_info(shop_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\&quot;&gt;Beta&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Give feedback&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.&lt;/p&gt;&lt;/div&gt;  Returns a shop&#39;s list of existing Return Policies
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShopReturnPolicies, Integer, Hash)>] ShopReturnPolicies data, response status code and response headers
    def get_shop_return_policies_with_http_info(shop_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReturnPolicyApi.get_shop_return_policies ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReturnPolicyApi.get_shop_return_policies"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReturnPolicyApi.get_shop_return_policies, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/policies/return'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReturnPolicies'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReturnPolicyApi.get_shop_return_policies",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReturnPolicyApi#get_shop_return_policies\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\">Beta</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.</p></div>  Retrieves an existing Return Policy.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param [Hash] opts the optional parameters
    # @return [ShopReturnPolicy]
    def get_shop_return_policy(shop_id, return_policy_id, opts = {})
      data, _status_code, _headers = get_shop_return_policy_with_http_info(shop_id, return_policy_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\&quot;&gt;Beta&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Give feedback&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.&lt;/p&gt;&lt;/div&gt;  Retrieves an existing Return Policy.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShopReturnPolicy, Integer, Hash)>] ShopReturnPolicy data, response status code and response headers
    def get_shop_return_policy_with_http_info(shop_id, return_policy_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReturnPolicyApi.get_shop_return_policy ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReturnPolicyApi.get_shop_return_policy"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReturnPolicyApi.get_shop_return_policy, must be greater than or equal to 1.'
      end

      # verify the required parameter 'return_policy_id' is set
      if @api_client.config.client_side_validation && return_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'return_policy_id' when calling ShopReturnPolicyApi.get_shop_return_policy"
      end
      if @api_client.config.client_side_validation && return_policy_id < 1
        fail ArgumentError, 'invalid value for "return_policy_id" when calling ShopReturnPolicyApi.get_shop_return_policy, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/policies/return/{return_policy_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'return_policy_id' + '}', CGI.escape(return_policy_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReturnPolicy'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReturnPolicyApi.get_shop_return_policy",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReturnPolicyApi#get_shop_return_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\">Beta</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Give feedback</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.</p></div>  Updates an existing Return Policy.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param accepts_returns [Boolean] 
    # @param accepts_exchanges [Boolean] 
    # @param return_deadline [Integer] The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90].
    # @param [Hash] opts the optional parameters
    # @return [ShopReturnPolicy]
    def update_shop_return_policy(shop_id, return_policy_id, accepts_returns, accepts_exchanges, return_deadline, opts = {})
      data, _status_code, _headers = update_shop_return_policy_with_http_info(shop_id, return_policy_id, accepts_returns, accepts_exchanges, return_deadline, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-denim-tint wt-mr-xs-2\&quot;&gt;Beta&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Give feedback&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready to use as defined below. Changes may occur before launch, but we received satisfactory feedback on the interface and don’t expect any breaking changes.&lt;/p&gt;&lt;/div&gt;  Updates an existing Return Policy.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param return_policy_id [Integer] The numeric ID of the Return Policy.
    # @param accepts_returns [Boolean] 
    # @param accepts_exchanges [Boolean] 
    # @param return_deadline [Integer] The deadline for the Return Policy, measured in days. The value must be one of the following: [7, 14, 21, 30, 45, 60, 90].
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShopReturnPolicy, Integer, Hash)>] ShopReturnPolicy data, response status code and response headers
    def update_shop_return_policy_with_http_info(shop_id, return_policy_id, accepts_returns, accepts_exchanges, return_deadline, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReturnPolicyApi.update_shop_return_policy ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReturnPolicyApi.update_shop_return_policy"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReturnPolicyApi.update_shop_return_policy, must be greater than or equal to 1.'
      end

      # verify the required parameter 'return_policy_id' is set
      if @api_client.config.client_side_validation && return_policy_id.nil?
        fail ArgumentError, "Missing the required parameter 'return_policy_id' when calling ShopReturnPolicyApi.update_shop_return_policy"
      end
      if @api_client.config.client_side_validation && return_policy_id < 1
        fail ArgumentError, 'invalid value for "return_policy_id" when calling ShopReturnPolicyApi.update_shop_return_policy, must be greater than or equal to 1.'
      end

      # verify the required parameter 'accepts_returns' is set
      if @api_client.config.client_side_validation && accepts_returns.nil?
        fail ArgumentError, "Missing the required parameter 'accepts_returns' when calling ShopReturnPolicyApi.update_shop_return_policy"
      end
      # verify the required parameter 'accepts_exchanges' is set
      if @api_client.config.client_side_validation && accepts_exchanges.nil?
        fail ArgumentError, "Missing the required parameter 'accepts_exchanges' when calling ShopReturnPolicyApi.update_shop_return_policy"
      end
      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/policies/return/{return_policy_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'return_policy_id' + '}', CGI.escape(return_policy_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['accepts_returns'] = accepts_returns
      form_params['accepts_exchanges'] = accepts_exchanges
      form_params['return_deadline'] = return_deadline

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReturnPolicy'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReturnPolicyApi.update_shop_return_policy",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReturnPolicyApi#update_shop_return_policy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
