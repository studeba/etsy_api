=begin
#Etsy Open API v3

#<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

The version of the OpenAPI document: 3.0.0
Contact: developers@etsy.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module EtsyApi
  class ShopReceiptApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Submits tracking information for a Shop Receipt, which creates a Shop Receipt Shipment entry for the given receipt_id. Each time you successfully submit tracking info, Etsy sends a notification email to the buyer User. When send_bcc is true, Etsy sends shipping notifications to the seller as well. When tracking_code and carrier_name aren't sent, the receipt is marked as shipped only. If the carrier is not supported, you may use `other` as the carrier name so you can provide the tracking code. **NOTE** When shipping within the United States AND the order is over $10 _or_ when shipping to India, tracking code and carrier name ARE required. 
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param receipt_id [Integer] The receipt to submit tracking for.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :tracking_code The tracking code for this receipt.
    # @option opts [String] :carrier_name The carrier name for this receipt.
    # @option opts [Boolean] :send_bcc If true, the shipping notification will be sent to the seller as well
    # @option opts [String] :note_to_buyer Message to include in notification to the buyer.
    # @return [ShopReceipt]
    def create_receipt_shipment(shop_id, receipt_id, opts = {})
      data, _status_code, _headers = create_receipt_shipment_with_http_info(shop_id, receipt_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Submits tracking information for a Shop Receipt, which creates a Shop Receipt Shipment entry for the given receipt_id. Each time you successfully submit tracking info, Etsy sends a notification email to the buyer User. When send_bcc is true, Etsy sends shipping notifications to the seller as well. When tracking_code and carrier_name aren&#39;t sent, the receipt is marked as shipped only. If the carrier is not supported, you may use &#x60;other&#x60; as the carrier name so you can provide the tracking code. **NOTE** When shipping within the United States AND the order is over $10 _or_ when shipping to India, tracking code and carrier name ARE required. 
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param receipt_id [Integer] The receipt to submit tracking for.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :tracking_code The tracking code for this receipt.
    # @option opts [String] :carrier_name The carrier name for this receipt.
    # @option opts [Boolean] :send_bcc If true, the shipping notification will be sent to the seller as well
    # @option opts [String] :note_to_buyer Message to include in notification to the buyer.
    # @return [Array<(ShopReceipt, Integer, Hash)>] ShopReceipt data, response status code and response headers
    def create_receipt_shipment_with_http_info(shop_id, receipt_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReceiptApi.create_receipt_shipment ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReceiptApi.create_receipt_shipment"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReceiptApi.create_receipt_shipment, must be greater than or equal to 1.'
      end

      # verify the required parameter 'receipt_id' is set
      if @api_client.config.client_side_validation && receipt_id.nil?
        fail ArgumentError, "Missing the required parameter 'receipt_id' when calling ShopReceiptApi.create_receipt_shipment"
      end
      if @api_client.config.client_side_validation && receipt_id < 1
        fail ArgumentError, 'invalid value for "receipt_id" when calling ShopReceiptApi.create_receipt_shipment, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/receipts/{receipt_id}/tracking'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'receipt_id' + '}', CGI.escape(receipt_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['tracking_code'] = opts[:'tracking_code'] if !opts[:'tracking_code'].nil?
      form_params['carrier_name'] = opts[:'carrier_name'] if !opts[:'carrier_name'].nil?
      form_params['send_bcc'] = opts[:'send_bcc'] if !opts[:'send_bcc'].nil?
      form_params['note_to_buyer'] = opts[:'note_to_buyer'] if !opts[:'note_to_buyer'].nil?

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReceipt'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReceiptApi.create_receipt_shipment",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReceiptApi#create_receipt_shipment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves a receipt, identified by a receipt id, from an Etsy shop
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param receipt_id [Integer] The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @return [ShopReceipt]
    def get_shop_receipt(shop_id, receipt_id, opts = {})
      data, _status_code, _headers = get_shop_receipt_with_http_info(shop_id, receipt_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves a receipt, identified by a receipt id, from an Etsy shop
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param receipt_id [Integer] The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShopReceipt, Integer, Hash)>] ShopReceipt data, response status code and response headers
    def get_shop_receipt_with_http_info(shop_id, receipt_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReceiptApi.get_shop_receipt ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReceiptApi.get_shop_receipt"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReceiptApi.get_shop_receipt, must be greater than or equal to 1.'
      end

      # verify the required parameter 'receipt_id' is set
      if @api_client.config.client_side_validation && receipt_id.nil?
        fail ArgumentError, "Missing the required parameter 'receipt_id' when calling ShopReceiptApi.get_shop_receipt"
      end
      if @api_client.config.client_side_validation && receipt_id < 1
        fail ArgumentError, 'invalid value for "receipt_id" when calling ShopReceiptApi.get_shop_receipt, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/receipts/{receipt_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'receipt_id' + '}', CGI.escape(receipt_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReceipt'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReceiptApi.get_shop_receipt",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReceiptApi#get_shop_receipt\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Requests the Shop Receipts from a specific Shop, unfiltered or filtered by receipt id range or offset, date, paid, and/or shipped purchases.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :min_created The earliest unix timestamp for when a record was created.
    # @option opts [Integer] :max_created The latest unix timestamp for when a record was created.
    # @option opts [Integer] :min_last_modified The earliest unix timestamp for when a record last changed.
    # @option opts [Integer] :max_last_modified The latest unix timestamp for when a record last changed.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @option opts [Integer] :offset The number of records to skip before selecting the first result. (default to 0)
    # @option opts [String] :sort_on The value to sort a search result of listings on. (default to 'created')
    # @option opts [String] :sort_order The ascending(up) or descending(down) order to sort receipts by. (default to 'desc')
    # @option opts [Boolean] :was_paid When &#x60;true&#x60;, returns receipts where the seller has recieved payment for the receipt. When &#x60;false&#x60;, returns receipts where payment has not been received.
    # @option opts [Boolean] :was_shipped When &#x60;true&#x60;, returns receipts where the seller shipped the product(s) in this receipt. When &#x60;false&#x60;, returns receipts where shipment has not been set.
    # @option opts [Boolean] :was_delivered When &#x60;true&#x60;, returns receipts that have been marked as delivered. When &#x60;false&#x60;, returns receipts where shipment has not been marked as delivered.
    # @return [ShopReceipts]
    def get_shop_receipts(shop_id, opts = {})
      data, _status_code, _headers = get_shop_receipts_with_http_info(shop_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Requests the Shop Receipts from a specific Shop, unfiltered or filtered by receipt id range or offset, date, paid, and/or shipped purchases.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :min_created The earliest unix timestamp for when a record was created.
    # @option opts [Integer] :max_created The latest unix timestamp for when a record was created.
    # @option opts [Integer] :min_last_modified The earliest unix timestamp for when a record last changed.
    # @option opts [Integer] :max_last_modified The latest unix timestamp for when a record last changed.
    # @option opts [Integer] :limit The maximum number of results to return. (default to 25)
    # @option opts [Integer] :offset The number of records to skip before selecting the first result. (default to 0)
    # @option opts [String] :sort_on The value to sort a search result of listings on. (default to 'created')
    # @option opts [String] :sort_order The ascending(up) or descending(down) order to sort receipts by. (default to 'desc')
    # @option opts [Boolean] :was_paid When &#x60;true&#x60;, returns receipts where the seller has recieved payment for the receipt. When &#x60;false&#x60;, returns receipts where payment has not been received.
    # @option opts [Boolean] :was_shipped When &#x60;true&#x60;, returns receipts where the seller shipped the product(s) in this receipt. When &#x60;false&#x60;, returns receipts where shipment has not been set.
    # @option opts [Boolean] :was_delivered When &#x60;true&#x60;, returns receipts that have been marked as delivered. When &#x60;false&#x60;, returns receipts where shipment has not been marked as delivered.
    # @return [Array<(ShopReceipts, Integer, Hash)>] ShopReceipts data, response status code and response headers
    def get_shop_receipts_with_http_info(shop_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReceiptApi.get_shop_receipts ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReceiptApi.get_shop_receipts"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'min_created'].nil? && opts[:'min_created'] < 946684800
        fail ArgumentError, 'invalid value for "opts[:"min_created"]" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 946684800.'
      end

      if @api_client.config.client_side_validation && !opts[:'max_created'].nil? && opts[:'max_created'] < 946684800
        fail ArgumentError, 'invalid value for "opts[:"max_created"]" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 946684800.'
      end

      if @api_client.config.client_side_validation && !opts[:'min_last_modified'].nil? && opts[:'min_last_modified'] < 946684800
        fail ArgumentError, 'invalid value for "opts[:"min_last_modified"]" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 946684800.'
      end

      if @api_client.config.client_side_validation && !opts[:'max_last_modified'].nil? && opts[:'max_last_modified'] < 946684800
        fail ArgumentError, 'invalid value for "opts[:"max_last_modified"]" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 946684800.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ShopReceiptApi.get_shop_receipts, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'offset'].nil? && opts[:'offset'] < 0
        fail ArgumentError, 'invalid value for "opts[:"offset"]" when calling ShopReceiptApi.get_shop_receipts, must be greater than or equal to 0.'
      end

      allowable_values = ["created", "updated", "receipt_id"]
      if @api_client.config.client_side_validation && opts[:'sort_on'] && !allowable_values.include?(opts[:'sort_on'])
        fail ArgumentError, "invalid value for \"sort_on\", must be one of #{allowable_values}"
      end
      allowable_values = ["asc", "ascending", "desc", "descending", "up", "down"]
      if @api_client.config.client_side_validation && opts[:'sort_order'] && !allowable_values.include?(opts[:'sort_order'])
        fail ArgumentError, "invalid value for \"sort_order\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/receipts'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'min_created'] = opts[:'min_created'] if !opts[:'min_created'].nil?
      query_params[:'max_created'] = opts[:'max_created'] if !opts[:'max_created'].nil?
      query_params[:'min_last_modified'] = opts[:'min_last_modified'] if !opts[:'min_last_modified'].nil?
      query_params[:'max_last_modified'] = opts[:'max_last_modified'] if !opts[:'max_last_modified'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'sort_on'] = opts[:'sort_on'] if !opts[:'sort_on'].nil?
      query_params[:'sort_order'] = opts[:'sort_order'] if !opts[:'sort_order'].nil?
      query_params[:'was_paid'] = opts[:'was_paid'] if !opts[:'was_paid'].nil?
      query_params[:'was_shipped'] = opts[:'was_shipped'] if !opts[:'was_shipped'].nil?
      query_params[:'was_delivered'] = opts[:'was_delivered'] if !opts[:'was_delivered'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReceipts'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReceiptApi.get_shop_receipts",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReceiptApi#get_shop_receipts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Updates the status of a receipt, identified by a receipt id, from an Etsy shop
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param receipt_id [Integer] The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :was_shipped When &#x60;true&#x60;, returns receipts where the seller shipped the product(s) in this receipt. When &#x60;false&#x60;, returns receipts where shipment has not been set.
    # @option opts [Boolean] :was_paid When &#x60;true&#x60;, returns receipts where the seller has recieved payment for the receipt. When &#x60;false&#x60;, returns receipts where payment has not been received.
    # @return [ShopReceipt]
    def update_shop_receipt(shop_id, receipt_id, opts = {})
      data, _status_code, _headers = update_shop_receipt_with_http_info(shop_id, receipt_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Updates the status of a receipt, identified by a receipt id, from an Etsy shop
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param receipt_id [Integer] The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :was_shipped When &#x60;true&#x60;, returns receipts where the seller shipped the product(s) in this receipt. When &#x60;false&#x60;, returns receipts where shipment has not been set.
    # @option opts [Boolean] :was_paid When &#x60;true&#x60;, returns receipts where the seller has recieved payment for the receipt. When &#x60;false&#x60;, returns receipts where payment has not been received.
    # @return [Array<(ShopReceipt, Integer, Hash)>] ShopReceipt data, response status code and response headers
    def update_shop_receipt_with_http_info(shop_id, receipt_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopReceiptApi.update_shop_receipt ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopReceiptApi.update_shop_receipt"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopReceiptApi.update_shop_receipt, must be greater than or equal to 1.'
      end

      # verify the required parameter 'receipt_id' is set
      if @api_client.config.client_side_validation && receipt_id.nil?
        fail ArgumentError, "Missing the required parameter 'receipt_id' when calling ShopReceiptApi.update_shop_receipt"
      end
      if @api_client.config.client_side_validation && receipt_id < 1
        fail ArgumentError, 'invalid value for "receipt_id" when calling ShopReceiptApi.update_shop_receipt, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/receipts/{receipt_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'receipt_id' + '}', CGI.escape(receipt_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['was_shipped'] = opts[:'was_shipped'] if !opts[:'was_shipped'].nil?
      form_params['was_paid'] = opts[:'was_paid'] if !opts[:'was_paid'].nil?

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ShopReceipt'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopReceiptApi.update_shop_receipt",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopReceiptApi#update_shop_receipt\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
