=begin
#Etsy Open API v3

#<div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.

The version of the OpenAPI document: 3.0.0
Contact: developers@etsy.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module EtsyApi
  class ShopListingImageApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Open API V3 endpoint to delete a listing image. A copy of the file remains on our servers, and so a deleted image may be re-associated with the listing without re-uploading the original image; see uploadListingImage.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param listing_image_id [Integer] The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_listing_image(shop_id, listing_id, listing_image_id, opts = {})
      delete_listing_image_with_http_info(shop_id, listing_id, listing_image_id, opts)
      nil
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Open API V3 endpoint to delete a listing image. A copy of the file remains on our servers, and so a deleted image may be re-associated with the listing without re-uploading the original image; see uploadListingImage.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param listing_image_id [Integer] The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_listing_image_with_http_info(shop_id, listing_id, listing_image_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopListingImageApi.delete_listing_image ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopListingImageApi.delete_listing_image"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopListingImageApi.delete_listing_image, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_id' is set
      if @api_client.config.client_side_validation && listing_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_id' when calling ShopListingImageApi.delete_listing_image"
      end
      if @api_client.config.client_side_validation && listing_id < 1
        fail ArgumentError, 'invalid value for "listing_id" when calling ShopListingImageApi.delete_listing_image, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_image_id' is set
      if @api_client.config.client_side_validation && listing_image_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_image_id' when calling ShopListingImageApi.delete_listing_image"
      end
      if @api_client.config.client_side_validation && listing_image_id < 1
        fail ArgumentError, 'invalid value for "listing_image_id" when calling ShopListingImageApi.delete_listing_image, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/listings/{listing_id}/images/{listing_image_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'listing_id' + '}', CGI.escape(listing_id.to_s)).sub('{' + 'listing_image_id' + '}', CGI.escape(listing_image_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopListingImageApi.delete_listing_image",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopListingImageApi#delete_listing_image\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves the references and metadata for a listing image with a specific image ID.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param listing_image_id [Integer] The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @param [Hash] opts the optional parameters
    # @return [ListingImage]
    def get_listing_image(listing_id, listing_image_id, opts = {})
      data, _status_code, _headers = get_listing_image_with_http_info(listing_id, listing_image_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves the references and metadata for a listing image with a specific image ID.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param listing_image_id [Integer] The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListingImage, Integer, Hash)>] ListingImage data, response status code and response headers
    def get_listing_image_with_http_info(listing_id, listing_image_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopListingImageApi.get_listing_image ...'
      end
      # verify the required parameter 'listing_id' is set
      if @api_client.config.client_side_validation && listing_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_id' when calling ShopListingImageApi.get_listing_image"
      end
      if @api_client.config.client_side_validation && listing_id < 1
        fail ArgumentError, 'invalid value for "listing_id" when calling ShopListingImageApi.get_listing_image, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_image_id' is set
      if @api_client.config.client_side_validation && listing_image_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_image_id' when calling ShopListingImageApi.get_listing_image"
      end
      if @api_client.config.client_side_validation && listing_image_id < 1
        fail ArgumentError, 'invalid value for "listing_image_id" when calling ShopListingImageApi.get_listing_image, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/listings/{listing_id}/images/{listing_image_id}'.sub('{' + 'listing_id' + '}', CGI.escape(listing_id.to_s)).sub('{' + 'listing_image_id' + '}', CGI.escape(listing_image_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListingImage'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key']

      new_options = opts.merge(
        :operation => :"ShopListingImageApi.get_listing_image",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopListingImageApi#get_listing_image\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  NOTE: This endpoint is being deprecated in favor of not requiring the shops/:shop_id as part of the URL. Retrieves the references and metadata for a listing image with a specific image ID.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param listing_image_id [Integer] The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @param [Hash] opts the optional parameters
    # @return [ListingImage]
    def get_listing_image_deprecated(shop_id, listing_id, listing_image_id, opts = {})
      data, _status_code, _headers = get_listing_image_deprecated_with_http_info(shop_id, listing_id, listing_image_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  NOTE: This endpoint is being deprecated in favor of not requiring the shops/:shop_id as part of the URL. Retrieves the references and metadata for a listing image with a specific image ID.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param listing_image_id [Integer] The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListingImage, Integer, Hash)>] ListingImage data, response status code and response headers
    def get_listing_image_deprecated_with_http_info(shop_id, listing_id, listing_image_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopListingImageApi.get_listing_image_deprecated ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopListingImageApi.get_listing_image_deprecated"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopListingImageApi.get_listing_image_deprecated, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_id' is set
      if @api_client.config.client_side_validation && listing_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_id' when calling ShopListingImageApi.get_listing_image_deprecated"
      end
      if @api_client.config.client_side_validation && listing_id < 1
        fail ArgumentError, 'invalid value for "listing_id" when calling ShopListingImageApi.get_listing_image_deprecated, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_image_id' is set
      if @api_client.config.client_side_validation && listing_image_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_image_id' when calling ShopListingImageApi.get_listing_image_deprecated"
      end
      if @api_client.config.client_side_validation && listing_image_id < 1
        fail ArgumentError, 'invalid value for "listing_image_id" when calling ShopListingImageApi.get_listing_image_deprecated, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/listings/{listing_id}/images/{listing_image_id}'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'listing_id' + '}', CGI.escape(listing_id.to_s)).sub('{' + 'listing_image_id' + '}', CGI.escape(listing_image_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListingImage'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key']

      new_options = opts.merge(
        :operation => :"ShopListingImageApi.get_listing_image_deprecated",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopListingImageApi#get_listing_image_deprecated\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Retrieves all listing image resources for a listing with a specific listing ID.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @return [ListingImages]
    def get_listing_images(listing_id, opts = {})
      data, _status_code, _headers = get_listing_images_with_http_info(listing_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Retrieves all listing image resources for a listing with a specific listing ID.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListingImages, Integer, Hash)>] ListingImages data, response status code and response headers
    def get_listing_images_with_http_info(listing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopListingImageApi.get_listing_images ...'
      end
      # verify the required parameter 'listing_id' is set
      if @api_client.config.client_side_validation && listing_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_id' when calling ShopListingImageApi.get_listing_images"
      end
      if @api_client.config.client_side_validation && listing_id < 1
        fail ArgumentError, 'invalid value for "listing_id" when calling ShopListingImageApi.get_listing_images, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/listings/{listing_id}/images'.sub('{' + 'listing_id' + '}', CGI.escape(listing_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListingImages'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key']

      new_options = opts.merge(
        :operation => :"ShopListingImageApi.get_listing_images",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopListingImageApi#get_listing_images\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  NOTE: This endpoint is being deprecated in favor of not requiring the shops/:shop_id as part of the URL. Retrieves all listing image resources for a listing with a specific listing ID.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @return [ListingImages]
    def get_listing_images_deprecated(shop_id, listing_id, opts = {})
      data, _status_code, _headers = get_listing_images_deprecated_with_http_info(shop_id, listing_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  NOTE: This endpoint is being deprecated in favor of not requiring the shops/:shop_id as part of the URL. Retrieves all listing image resources for a listing with a specific listing ID.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ListingImages, Integer, Hash)>] ListingImages data, response status code and response headers
    def get_listing_images_deprecated_with_http_info(shop_id, listing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopListingImageApi.get_listing_images_deprecated ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopListingImageApi.get_listing_images_deprecated"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopListingImageApi.get_listing_images_deprecated, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_id' is set
      if @api_client.config.client_side_validation && listing_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_id' when calling ShopListingImageApi.get_listing_images_deprecated"
      end
      if @api_client.config.client_side_validation && listing_id < 1
        fail ArgumentError, 'invalid value for "listing_id" when calling ShopListingImageApi.get_listing_images_deprecated, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/listings/{listing_id}/images'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'listing_id' + '}', CGI.escape(listing_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListingImages'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key']

      new_options = opts.merge(
        :operation => :"ShopListingImageApi.get_listing_images_deprecated",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopListingImageApi#get_listing_images_deprecated\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # <div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/issues/new/choose\" target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>  Uploads or assigns an image to a listing identified by a shop ID with a listing ID. To upload a new image, set the image file as the value for the `image` parameter. You can assign a previously deleted image to a listing using the deleted image's image ID in the `listing_image_id` parameter. When a request contains both `image` and `listing_image_id` parameter values, the endpoint uploads the image in the `image` parameter only. Note: When uploading a new image, data such as colors and size may return as null values due to asynchronous processing of the image. Use getListingImage endpoint to fetch these values.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @option opts [File] :image The file name string of a file to upload
    # @option opts [Integer] :listing_image_id The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @option opts [Integer] :rank The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing. (default to 1)
    # @option opts [Boolean] :overwrite When true, this request replaces the existing image at a given rank. (default to false)
    # @option opts [Boolean] :is_watermarked When true, indicates that the uploaded image has a watermark. (default to false)
    # @option opts [String] :alt_text Alt text for the listing image. (default to '')
    # @return [ListingImage]
    def upload_listing_image(shop_id, listing_id, opts = {})
      data, _status_code, _headers = upload_listing_image_with_http_info(shop_id, listing_id, opts)
      data
    end

    # &lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;span class&#x3D;\&quot;wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2\&quot;&gt;General Release&lt;/span&gt;&lt;a class&#x3D;\&quot;wt-text-link\&quot; href&#x3D;\&quot;https://github.com/etsy/open-api/issues/new/choose\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;Report bug&lt;/a&gt;&lt;/div&gt;&lt;div class&#x3D;\&quot;wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\&quot;&gt;&lt;p class&#x3D;\&quot;wt-text-body-01 banner-text\&quot;&gt;This endpoint is ready for production use.&lt;/p&gt;&lt;/div&gt;  Uploads or assigns an image to a listing identified by a shop ID with a listing ID. To upload a new image, set the image file as the value for the &#x60;image&#x60; parameter. You can assign a previously deleted image to a listing using the deleted image&#39;s image ID in the &#x60;listing_image_id&#x60; parameter. When a request contains both &#x60;image&#x60; and &#x60;listing_image_id&#x60; parameter values, the endpoint uploads the image in the &#x60;image&#x60; parameter only. Note: When uploading a new image, data such as colors and size may return as null values due to asynchronous processing of the image. Use getListingImage endpoint to fetch these values.
    # @param shop_id [Integer] The unique positive non-zero numeric ID for an Etsy Shop.
    # @param listing_id [Integer] The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
    # @param [Hash] opts the optional parameters
    # @option opts [File] :image The file name string of a file to upload
    # @option opts [Integer] :listing_image_id The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
    # @option opts [Integer] :rank The positive non-zero numeric position in the images displayed in a listing, with rank 1 images appearing in the left-most position in a listing. (default to 1)
    # @option opts [Boolean] :overwrite When true, this request replaces the existing image at a given rank. (default to false)
    # @option opts [Boolean] :is_watermarked When true, indicates that the uploaded image has a watermark. (default to false)
    # @option opts [String] :alt_text Alt text for the listing image. (default to '')
    # @return [Array<(ListingImage, Integer, Hash)>] ListingImage data, response status code and response headers
    def upload_listing_image_with_http_info(shop_id, listing_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShopListingImageApi.upload_listing_image ...'
      end
      # verify the required parameter 'shop_id' is set
      if @api_client.config.client_side_validation && shop_id.nil?
        fail ArgumentError, "Missing the required parameter 'shop_id' when calling ShopListingImageApi.upload_listing_image"
      end
      if @api_client.config.client_side_validation && shop_id < 1
        fail ArgumentError, 'invalid value for "shop_id" when calling ShopListingImageApi.upload_listing_image, must be greater than or equal to 1.'
      end

      # verify the required parameter 'listing_id' is set
      if @api_client.config.client_side_validation && listing_id.nil?
        fail ArgumentError, "Missing the required parameter 'listing_id' when calling ShopListingImageApi.upload_listing_image"
      end
      if @api_client.config.client_side_validation && listing_id < 1
        fail ArgumentError, 'invalid value for "listing_id" when calling ShopListingImageApi.upload_listing_image, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'listing_image_id'].nil? && opts[:'listing_image_id'] < 1
        fail ArgumentError, 'invalid value for "opts[:"listing_image_id"]" when calling ShopListingImageApi.upload_listing_image, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'rank'].nil? && opts[:'rank'] < 0
        fail ArgumentError, 'invalid value for "opts[:"rank"]" when calling ShopListingImageApi.upload_listing_image, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/v3/application/shops/{shop_id}/listings/{listing_id}/images'.sub('{' + 'shop_id' + '}', CGI.escape(shop_id.to_s)).sub('{' + 'listing_id' + '}', CGI.escape(listing_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['multipart/form-data'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['image'] = opts[:'image'] if !opts[:'image'].nil?
      form_params['listing_image_id'] = opts[:'listing_image_id'] if !opts[:'listing_image_id'].nil?
      form_params['rank'] = opts[:'rank'] if !opts[:'rank'].nil?
      form_params['overwrite'] = opts[:'overwrite'] if !opts[:'overwrite'].nil?
      form_params['is_watermarked'] = opts[:'is_watermarked'] if !opts[:'is_watermarked'].nil?
      form_params['alt_text'] = opts[:'alt_text'] if !opts[:'alt_text'].nil?

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListingImage'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"ShopListingImageApi.upload_listing_image",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShopListingImageApi#upload_listing_image\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
